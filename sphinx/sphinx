var mysql = require('mysql');
let Sphinx = require('sphinxapi');
let q = require('q');

const sphinx = new Sphinx({
    host: 'localhost', // default sphinx host
    port: 9312 // default sphinx TCP port
});

/*var connection = mysql.createConnection(
    {
        localAddress: '127.0.0.1',
        port: '9306'
    }
);*/


let sphinxSearch = function (str) {
    let deferred = q.defer();
    // sphinx.SetSortMode(SPH_SORT_ATTR_ASC);
    // sphinx.SetGroupBy('saveTime',Sphinx.SPH_GROUPBY_ATTR,"@group desc")
    sphinx.SetFilter('category',[6],false);
    sphinx.SetSortMode(Sphinx.SPH_SORT_ATTR_DESC, 'feed_time');
    sphinx.SetLimits(0,10);
    sphinx.Query(str,(err,result)=>{
        if(err) throw err;
        console.log(getIdsFromResult(result));
        deferred.resolve(result);
    });
    return deferred.promise;
/*    connection.connect();
    var queryString = `SELECT * FROM test1 WHERE MATCH('${str}') limit 100`;

    connection.query(queryString, function(err, rows, fields) {
        if (err) throw err;

        console.log(rows);
        // console.log(fields);

        // for (var i in rows) {
        //     console.log('date:', rows[i].date);
        // }
    });
    connection.end();*/
    // sphinx.SetSortMode("SPH_SORT_ATTR_DESC",2);
/*    const params = {
        limits: {
            offset: 0, // default is 0
            limit: 30 // default is 20 as documented
        }
    };
    sphinx.query(str,params)
        .then(result=>{
            console.log(result);
        }).catch(console.error.bind(console))*/
};

let getIdsFromResult = function(result = {}) {
    if (typeof(result)== 'Object') {
        throw new TypeError('Result must be an object');
    } else if (!result.hasOwnProperty('matches')) {
        return [];
    }
    return result.matches.map(match => match && match.id)
        // .filter(id => {typeof (id) == 'Number'});
};

module.exports.sphinxSearch = sphinxSearch;